# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on: 
  push:
 
  pull_request: 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  job1:
    if: endsWith('./demo','_Snakefile.smk') == true  # TO BE DELETED
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: First interaction
        uses: actions/first-interaction@v1.1.0
        with:
          # Token for the repository. Can be passed in using {{ secrets.GITHUB_TOKEN }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          # Comment to post on an individual's first issue
          issue-message: echo welcome to the community  # To be changed
          # Comment to post on an individual's first pull request
          pr-message: Plesae refer .github/PULL_REQUEST_TEMPLATE.md # To be changed
      
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other acjtions to build,
          echo test, and deploy your project.
      
  job2:
    if: endsWith('capture_Snakefile.smk','_Snakefile.smk') == true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
       
      - name: Caching
        uses: actions/cache@v2
        id: python-cache
        with:
          path: .github/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
              ${{ runner.os }}-pip-
      
      - name: Install dependencies
        if: steps.python-cache.outputs.cache-hit != 'true'
        
          
      - name: Linting
        uses: snakemake/snakemake-github-action@v1.6.0
        with:
          run : pip install -r .github/requirements.txt
          directory: '.test'
          snakefile: 'demo/capture_Snakefile.smk'
          args: '--lint'
          
