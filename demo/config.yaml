lcr-modules:

    _shared:
        lcr-modules: "../"
        lcr-scripts: "../../lcr-scripts"
        root_output_dir: "results/"
        scratch_directory: "scratch/"
        pairing_config:
            capture:
                unmatched_normal_id: "TCRBOA7-N-WEX"

    bam2fastq:
        inputs:
            sample_bam: "data/{sample_id}.bam"
        temp_outputs: True # fastq outputs will be temporary

    star:
        inputs:
            sample_fastq_1: "data/{sample_id}.read1.fastq.gz"
            sample_fastq_2: "data/{sample_id}.read2.fastq.gz"
        reference_params:
            star_overhang: "99"
        scratch_subdirectories: ["star", "sort_bam", "mark_dups"]

    manta:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
   
    mixcr:
        inputs:
            sample_fastq_1: "data/{sample_id}.read1.fastq.gz"
            sample_fastq_2: "data/{sample_id}.read2.fastq.gz"
    
    vcf2maf:
        inputs:
            vep_cache: "reference/vep_caches/"

    salmon:
        inputs:
            sample_fastq_1: "data/{sample_id}.read1.fastq.gz"
            sample_fastq_2: "data/{sample_id}.read2.fastq.gz"

    sequenza:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"

    gridss: 
        inputs: 
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
        references: 
            # See the current gridss module config file for details about where to obtain this file. 
            viral_fa: "/projects/rmorin/projects/DLBCL_DHITsig_genomes/reference/gridss/refgenomes/human_virus/human_virus.fa"
            viral_bwa_prefix: "/projects/rmorin/projects/DLBCL_DHITsig_genomes/reference/gridss/refgenomes/human_virus/human_virus.fa"
            pon_dir: "/projects/rmorin/reference/hmftools-references/gridss/pon"
            
    strelka:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
            # if using manta output, use vcf file in the 99-outputs subdirectory and ensure manta version corresponds to the loaded module
            candidate_small_indels: "results/manta-2.3/99-outputs/vcf/{seq_type}--{genome_build}/candidateSmallIndels/{tumour_id}--{normal_id}--{pair_status}.candidateSmallIndels.vcf"

    utils:
        inputs:
            bed: 
                grch37: "reference/exomes/grch37/bed/{id}.bed" # make sure this corresponds with config["lcr-modules"]["picard_qc"]["inputs"]["intervals"]
            
    picard_qc:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
        switches:
            capture_intervals: 
                _default: "reference/exomes/grch37/interval/S07604624_intervals.txt"
                # if 'capture_kit_id' is a column in samples.tsv and contain more than one kit_id, specify each kit using the values in the column. e.g. and add the corresponding bed file if needed
                # S07604624: "reference/exomes/grch37/interval/S07604624_intervals.txt"
                # <grch38_kit>: "reference/exomes/grch38/interval/<grch38_kit>_intervals.txt"
    
    bwa_mem:
        inputs:
            sample_fastq_1: "data/{sample_id}.read1.fastq.gz"
            sample_fastq_2: "data/{sample_id}.read2.fastq.gz"
        scratch_subdirectories: ["bwa_mem", "sort_bam", "mark_dups"]
        
    controlfreec:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
            
    liftover:
        tool: "battenberg"
        inputs:
            sample_seg: "data/{tool}/hg38/{tumour_sample_id}--{normal_sample_id}_subclones.igv.seg"


