lcr-modules:
    _shared:
        lcr-modules: "../"
        lcr-scripts: "../../lcr-scripts/"
        root_output_dir: "results/"
        scratch_directory: "scratch/"
        unmatched_normal_ids:
            genome--grch37: "TCRBOA7-N-WGS"

    sage:
        inputs:
            # Available wildcards: {seq_type} {genome_build} {sample_id}
            sample_bam: "data/{sample_id}.bam"

        # include here any additional flags to modify default parameters
        options:
            sage_run: ""

    picard_qc:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
        switches:
            capture_intervals:
                _default: "reference/exomes/grch37/interval/target_regions.nochr_intervals.txt"
                # if 'capture_kit_id' is a column in samples.tsv and contain more than one kit_id, specify each kit using the values in the column. e.g. and add the corresponding bed file if needed
                # S07604624: "reference/exomes/grch37/interval/S07604624_intervals.txt"
                # <grch38_kit>: "reference/exomes/grch38/interval/<grch38_kit>_intervals.txt"

    bam2fastq:
        inputs:
            sample_bam: "data/{sample_id}.bam"
        temp_outputs: True # fastq outputs will be temporary

    sequenza:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
        scratch_subdirectories: []

    bwa_mem:
        inputs:
            sample_fastq_1: "results/bam2fastq-1.2/99-outputs/{seq_type}/{sample_id}.read1.fastq.gz"
            sample_fastq_2: "results/bam2fastq-1.2/99-outputs/{seq_type}/{sample_id}.read2.fastq.gz"
        scratch_subdirectories: []

    controlfreec:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
        scratch_subdirectories: [] # mpileup should be in scratch space

    slms_3:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"

    manta:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"

    lofreq:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
        switches:
            # Intentionally running LoFreq without a BED file for simplicity
            # And to avoid having to include a large BED file in the repo
            regions_bed:
                _default: ""
                capture: ""

    strelka:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
            # if using manta output, use vcf file in the 99-outputs subdirectory and ensure manta version corresponds to the loaded module
            candidate_small_indels: "results/manta-2.3/99-outputs/vcf/{seq_type}--{genome_build}/candidateSmallIndels/{tumour_id}--{normal_id}--{pair_status}.candidateSmallIndels.vcf"

    gridss:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
        references:
            # See the current gridss module config file for details about where to obtain this file.
            viral_fa: "/projects/rmorin/projects/DLBCL_DHITsig_genomes/reference/gridss/refgenomes/human_virus/human_virus.fa"
            viral_bwa_prefix: "/projects/rmorin/projects/DLBCL_DHITsig_genomes/reference/gridss/refgenomes/human_virus/human_virus.fa"
            pon_dir: "/projects/rmorin/reference/hmftools-references/gridss/pon"

    starfish:
        dirs:
            _parent: "results/starfish-2.0_strelka-1.1_lofreq-1.0"
        inputs:
            names: ["strelka", "lofreq"]
            paths:
                [
                    "results/strelka-1.1/99-outputs/vcf/{seq_type}--{genome_build}/{tumour_id}--{normal_id}--{pair_status}.strelka.combined.vcf.gz",
                    "results/lofreq-1.0/99-outputs/{seq_type}--{genome_build}/{tumour_id}--{normal_id}--{pair_status}.lofreq.snvs.vcf.gz",
                ]

    mixcr:
        inputs:
            sample_fastq_1: "results/bam2fastq-1.2/99-outputs/{seq_type}/{sample_id}.read1.fastq.gz"
            sample_fastq_2: "results/bam2fastq-1.2/99-outputs/{seq_type}/{sample_id}.read2.fastq.gz"
            # Path to the directory where MIXCR should be installed
            mixcr_exec: "data"

    mutect2:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"

    varscan:
        inputs:
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"

    liftover:
        tool: "sequenza-1.4"
        dirs:
            _parent: "results/sequenza-1.4_liftover-1.2"
        inputs:
            sample_seg: "results/sequenza-1.4/03-igv_seg/genome--grch37/TCRBOA7-T-WGS--TCRBOA7-N-WGS--matched/filtered/sequenza_segments.igv.seg"

    battenberg:
        inputs:
            # Available wildcards: {seq_type} {genome_build} {sample_id}
            sample_bam: "data/{sample_id}.bam"

        reference_path:
            hg38: " --chr_prefixed_genome "
            grch37: " reference/genomes/grch37/downloads/hg19-grch37 "

    pathseq:
        inputs:
            sample_bam: "data/{sample_id}.bam"

        options:
            min_read_length: 49
            ebv_cutoff: [0.00004, 0.00008]

    utils:
        inputs:
            bed:
                grch37: "data/exome_bed/hg19/target_regions.nochr.bed" # make sure this corresponds with config["lcr-modules"]["picard_qc"]["inputs"]["intervals"]
                # if testing on GSC, use this file: "/projects/dscott_prj/CCSRI_1500/exomes/ref/agilent/hg19/target_regions.nochr.bed"
        mem_mb:
            bam_sort: 48000
        threads:
            bam_sort: 12

    hmftools:
        inputs:
            # Available wildcards: {seq_type} {genome_build} {sample_id}
            sample_bam: "data/{sample_id}.bam"
            sample_bai: "data/{sample_id}.bam.bai"
            # Available wildcards: {seq_type} {genome_build} {tumour_id}
            # Note: Only outputs of running Strelka in matched normal mode are accepted
            # Must be in bgzip with `.vcf.gz` extension.
            strelka_vcf: "results/strelka-1.1/99-outputs/vcf/genome--grch37/TCRBOA7-T-WGS--TCRBOA7-N-WGS--matched.strelka.combined.vcf.gz"
            # Available wildcards: {seq_type} {genome_build} {sample_id}
            # Note: These are output by the gripss somatic filtering step of the gridss module
            gridss_somatic: "results/gridss-1.1/99-outputs/vcf/genome--grch37/TCRBOA7-T-WGS--TCRBOA7-N-WGS--matched.gridss_somatic.vcf.gz" # Output of GRIPSS
            gridss_somatic_tbi: "results/gridss-1.1/99-outputs/vcf/genome--grch37/TCRBOA7-T-WGS--TCRBOA7-N-WGS--matched.gridss_somatic.vcf.gz.tbi"
            gridss_somatic_filtered: "results/gridss-1.1/99-outputs/vcf/genome--grch37/TCRBOA7-T-WGS--TCRBOA7-N-WGS--matched.gridss_somatic_filtered.vcf.gz" # Filtered output of GRIPSS
            gridss_somatic_filtered_tbi: "results/gridss-1.1/99-outputs/vcf/genome--grch37/TCRBOA7-T-WGS--TCRBOA7-N-WGS--matched.gridss_somatic_filtered.vcf.gz.tbi"
